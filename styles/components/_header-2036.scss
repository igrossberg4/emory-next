@keyframes flash {
  0% {
    opacity:0;
  }
  100% {
    opacity:1;
  }
}


@keyframes fadeIn {
  0% {
    opacity:0;
  }
  100% {
    opacity:1;
  }
}


.content-header__container.header-2036 {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items:center;
  padding: 0;
  text-align: center;
  // background: url("/public/images/2036-bg.jpg") no-repeat center bottom;
  background-size: cover !important;
  height: 100%;

  .header-inner-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    transition:
      transform math.div($main-carousel-transition-duration, 2) ease-in-out,
      opacity $main-carousel-transition-duration ease-in-out,
      max-width math.div($main-carousel-transition-duration, 2) ease-in-out,
      margin-left math.div($main-carousel-transition-duration, 2) ease-in-out;
    margin-left: 0;
    transform: translateX(0);
    // max-width: map-get($container-max-widths, lg);
    max-width: 100%;
    z-index: 2;

    .no_selected & {
      opacity: .3;
      max-width: 100%;

      .header-inner-content__text {
        max-width: 100%;
      }
    }

    // Ensure the transition of the O goes along with the slide transition speed.
    .is-transitioning & {
      @include media-breakpoint-up('md') {
        .header-inner-content__img {
          transition: left $main-carousel-transition-duration ease-in-out;
        }
      }
    }

    // .first & {
    //   margin-left: 0;
    //   transform: translateX(50px);

    //   @media (min-width: $round-image-size-big) {
    //     margin-left: calc(100% - #{$round-image-size-big});
    //     transform: translateX(100px);
    //   }
    // }

    // .last & {
    //   margin-left: 0;
    //   transform: translateX(-50px);

    //   @media (min-width: $round-image-size-big) {
    //     transform: translateX(-100px);
    //   }
    // }
  }

  .header-inner-content__img {
    z-index: 2;

    .image {
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  .title {
    text-transform: uppercase;
    font-size: $font-size-xsm;
    letter-spacing: 0.2em;
    line-height: 1em;
    font-weight: bold;
    font-family: $font-family-sans-serif;

    @include media-breakpoint-up(xsm) {
      font-size: $font-size-sm;
      letter-spacing: 0.39em;
    }

    @include media-breakpoint-up(sm) {
      font-size: $font-size-base;
    }

    @include media-breakpoint-up(md) {
      font-size: $font-size-xxlg;
      white-space: nowrap;
    }

    @include media-breakpoint-up(lg) {
      font-size: $h4-font-size;
    }
  }

  .title_expanded {
    height: 0;
    opacity:0;
    font-size: $font-size-xlg;
    line-height: 1.1;
  }

  .title_cta {
    margin-top: 1.5rem;

    // On mobile, the previous element (empty, height=0, ¿¿??) receives the
    // click event unless a z-index is set to make the button pop above.
    position: relative;
    z-index: 1;

    @include media-breakpoint-up(md) {
      margin-top: 3rem;
    }
  }

  .pretitle,
  .subtitle {
    &:empty {
      display: none;
    }
  }

  .actions {
    position: absolute;
    left: 0;
    animation: fadeIn math.div($main-carousel-transition-duration, 6) ease-in-out;
    width: 100%;
    z-index: 2;
    // transition: opacity math.div($main-carousel-transition-duration, 3) ease-out;

    // 2O36 Horizontal, without space
    @media (max-height: $round-image-vertical-breakpoint-xsm) {
      display: none;
    }
  }

  .btn {
    margin-bottom: math.div($default-separation, 2);
    &.after-expand{
      display: none;
      .is-scrolled &{
        display: block;
      }
    }
    &.before-expand{
      .is-scrolled &{
        display: none;
      }
    }
  }
}

.header-2036__title {
  display: flex;
  flex-direction: column;
  justify-content: center;
  position: absolute;
  top: 120px;
  width: 100%;
  z-index: 2;

  span {
    display: block;
    margin-bottom: 10px;
  }

  .header-2036__title__3 {
    margin-top: 120px;
  }

  svg {
    width: 55px;
    height: 80px;
    overflow: visible;
    display: block;
    margin: 0 auto;
    filter:
      drop-shadow(-3px -3px 6px rgba(255, 255, 255, .5))
      drop-shadow(2px 2px 6px rgba(95, 92, 89, .12))
      drop-shadow(4px 4px 11px rgba(177, 167, 162, .4));
  }

  // Vertical Media queries
  @media (max-width: map-get($grid-breakpoints, 'md')) and (max-height: $round-image-vertical-breakpoint-md) {
    svg {
      width: 40px;
      height: 58px;
    }
  }

  @media (max-width: map-get($grid-breakpoints, 'md')) and (max-height: $round-image-vertical-breakpoint-sm) {
    flex-direction: row;
    top: 35%;

    .header-2036__title__3 {
      margin-top: 0;
      margin-left: 120px;
    }

    > span {
      display: block;
      padding: 0 6px;
    }
  }

  @media (max-width: map-get($grid-breakpoints, 'md')) and (max-height: $round-image-vertical-breakpoint-xsm) {
    top: 25%;
  }

  @include media-breakpoint-up(md) {
    flex-direction: row;
    top: auto;
    bottom: 54%;

    > span {
      display: block;
      padding: 0 15px;
      margin-bottom:0;
    }

    .header-2036__title__3 {
      margin: 0 0 0 260px;
    }

    svg {
      width: 100px;
      height: inherit;
    }
  }

  @include media-breakpoint-up(lg) {
    bottom: 46%;

    > span {
      display: block;
      padding: 0 23px;
    }

    .header-2036__title__3 {
      margin: 0 0 0 330px;
    }

    svg {
      width: 135px;
      height: inherit;
    }
  }
}

// Scroll Animation

$pre-animation-delay: math.div($scroll-down-transition-duration, 2);
$curve: cubic-bezier(.63,.72,.79,.98);

.header-2036.content-header__container {
  transition: background $scroll-down-transition-duration ease-in-out;

  .header-inner-content__img {
    position: absolute;
    bottom: calc(100% - 120px - 86px - 8px - 100px); // vh - 2036 offset - 2 height - margin - O size
    left: calc(50vw - 50px); // Left explicit centering is needed for transitions! We can't do :auto
    max-width: unset;
    width: 100px;
    height: 100px;
    transform: none;
    z-index: 10;
    padding: 0;
    margin-bottom: 0;
    will-change: width, height;
    transition:
      width $scroll-down-transition-duration $pre-animation-delay $curve,
      height $scroll-down-transition-duration $pre-animation-delay $curve,
      left $scroll-down-transition-duration $pre-animation-delay $curve,
      bottom $scroll-down-transition-duration $pre-animation-delay $curve,
      margin-bottom $scroll-down-transition-duration $pre-animation-delay $curve,
      transform $scroll-down-transition-duration $pre-animation-delay $curve,
      opacity $scroll-down-transition-duration $pre-animation-delay $curve;

    // Mobile browsers have less RAM for animating video zoom, so fallback to a
    // fade out, size change without transition animation, then fade in.
    // @see implementation on _intro.scss:191
    body.is-mobile:not(.is-scrolled) & {
      z-index: 998;

      // Due to iOS's fantastic buggy behavior, we need to animate a
      // dummy property (z-index) in order to keey things in sync.
      // Thanks again, iOS.
      transition:
        z-index $mobile-animation-duration linear;
    }

    @include media-breakpoint-up(md) {
      border-width: 8px;
      left: calc((100vw / 2) - 178px);
      bottom: 54%; // Equal to .header-2036__title bottom
      width: 230px;
      height: 230px;
    }

    @include media-breakpoint-up(lg) {
      border-width: 12px;
      left: calc((100vw / 2) - 218px);
      bottom: 46%; // Equal to .header-2036__title bottom
      width: 282px;
      height: 282px;
    }

    // 2O36 vertical
    @media (max-width: map-get($grid-breakpoints, 'md') - 1px) and (max-height: $round-image-vertical-breakpoint-md) {
      bottom: calc(100% - 120px - 64px - 10px - 100px); // vh - 2036 offset - 2 height - margin - O size
    }

    // 2O36 horizontal
    @media (max-width: map-get($grid-breakpoints, 'md') - 1px) and (max-height: $round-image-vertical-breakpoint-sm) {
      bottom: calc(100% - 35% - 61px - 20px); // vh - 2036 offset - 2 height - margin - O size
      left: calc((100vw / 2) - 74px);
    }

    @media (max-width: map-get($grid-breakpoints, 'md') - 1px) and (max-height: $round-image-vertical-breakpoint-xsm) {
      bottom: calc(100% - 25% - 64px - 20px); // vh - 2036 offset - 2 height - margin - O size
    }

    video {
      position: absolute;
      display: block;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      z-index:20;
      border-radius: 50%;
    }
  }

  .header-inner-content__text {
    top: 75%;
    padding-left: math.div($grid-gutter-width, 2);
    padding-right: math.div($grid-gutter-width, 2);
    // padding-top: calc((80px * 3) + (10px * 3) + 120px + 80px);
    // letter_height * 3 + letter_margin_bottom * 3 + "O" margin offset +  offset from top.
    max-width: map-get($container-max-widths, 'lg');
    transition: padding-top $scroll-down-transition-duration * 1.5 ease;

    @media (max-width: map-get($grid-breakpoints, 'md')) and (max-height: $round-image-vertical-breakpoint-sm) {
      top: 65%;
    }

    @include media-breakpoint-up(md) {
      top: 63%;
    }
  }

  .title {
    transition: none;
  }

  .pretitle,
  .subtitle,
  .title_expanded {
    margin-bottom: 0;
    max-height: 0;
    opacity: 0;
    transition: opacity math.div($scroll-down-transition-duration, 2) ease-out,
      max-height math.div($scroll-down-transition-duration, 2) ease-out,
      margin math.div($scroll-down-transition-duration, 2) ease-out;
  }

  .link-button {
    @media (max-height: $round-image-vertical-breakpoint-sm) {
      padding: 8px 15px;
      font-size: $font-size-xs;
    }
  }

  // ANIMATION ACTIVE
  &[data-animation="active"] {
    background: $body-bg !important;

    .header-inner-content {
      // overflow: hidden;
    }

    .header-2036__title {
      opacity: 0;
    }

    .header-inner-content__img {
      top: auto;
      width:110vw !important;
      height:110vw !important;
      bottom: 0 !important;
      margin-left: 0 !important;
      margin-bottom: 0 !important;
      left: calc(50% - (110vw / 2)) !important;
      z-index: -1;
      opacity: .5;

      @media (orientation: portrait) {
        width: 110vh !important;
        height: 110vh !important;
        left: calc(50% - (110vh / 2)) !important;
      }

      // O Safari on mobile, you little rascal!
      // It looks like every other browser - even Safari on desktop! - will safely
      // interpolate between the two left values - the original and the final.
      // You amuse us by first positioning the "left" property and then animating
      // (thus starting the transition from the leftmost FINAL position instead of
      // animating TO that position).
      // It looks like an "auto" value will encourage you to do your work, but will
      // confuse the rest of the (well-behaved) browsers.
      // Well...
      // Here it is! Your own override! Enjoy it!
      .is-ios & {
        left: auto !important;
      }
    }

    .header-inner-content__text {
      top: 40%;

      @media (max-width: map-get($grid-breakpoints, 'sm')) and (max-height: $round-image-vertical-breakpoint-sm) {
        top: 55%;
      }
    }

    .title {
      animation: fadeIn ($scroll-down-transition-duration * 2);
      @extend .header-xlarge;
      line-height: 0.9em;
      letter-spacing: 0;
      white-space: normal;

      @media (max-width: map-get($grid-breakpoints, 'sm')) and (max-height: $round-image-vertical-breakpoint-sm) {
        font-size: $h4-font-size;
        margin: 0 5px;
      }

      @media (min-width: map-get($grid-breakpoints, 'sm')) and (max-height: $round-image-vertical-breakpoint-md) {
        font-size: $h2-font-size--desktop;
      }

      @media (min-width: map-get($grid-breakpoints, 'sm')) and (max-height: $round-image-vertical-breakpoint-sm) {
        font-size: $h2-font-size;
      }
    }

    .title_expanded {
      height: auto;
      max-height: 999px;
      opacity: 1;
      margin-bottom: 20px;
      display: block;

      @media (max-width: map-get($grid-breakpoints, 'sm')) and (max-height: $round-image-vertical-breakpoint-sm) {
        font-size: $font-size-base
      }
    }

    .pretitle,
    .subtitle {
      height: auto;
      max-height: 999px;
      opacity: 1;
    }

    .pretitle {
      margin-bottom: 15px;
    }

    video {
      pointer-events: none;
    }
  }
}


// Overrides for when the video is not played
// This is needed to override inline css dinamycally generated.
#container-video:not(.video-no-played) .header-2036.content-header__container {

  .header-inner-content__img {
    margin-bottom: 0 !important;

    @include media-breakpoint-up(md) {
      margin-bottom: calc(-1 * (230px - 140px) / 2) !important; // ball height - height of 2/3/6
    }

    @include media-breakpoint-up(lg) {
      margin-bottom: calc(-1 * (282px - 194px) / 2) !important; // ball height - height of 2/3/6
    }
  }
}
